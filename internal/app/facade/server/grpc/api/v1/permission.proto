syntax = "proto3";

package internal.app.adapter.grpc.api.v1.permission;

option go_package = "go-scaffold/internal/app/facade/grpc/api/v1;v1";

service Permission {
  rpc Create (PermissionCreateRequest) returns (PermissionCreateResponse) {};
  rpc Update (PermissionUpdateRequest) returns (PermissionUpdateResponse) {};
  rpc Delete (PermissionDeleteRequest) returns (PermissionDeleteResponse) {};
  rpc Detail (PermissionDetailRequest) returns (PermissionInfo) {};
  rpc List (PermissionListRequest) returns (PermissionListResponse) {};
}

message PermissionInfo {
  int64 id = 1; // @gotags: json:"id"
  string key = 2; // @gotags: json:"key"
  string name = 3; // @gotags: json:"name"
  string desc = 4; // @gotags: json:"desc"
  int64 parentID = 5; // @gotags: json:"parentID"
}

message PermissionCreateRequest {
  string key = 1; // @gotags: json:"key"
  string name = 2; // @gotags: json:"name"
  string desc = 3; // @gotags: json:"desc"
  int64 parentID = 4; // @gotags: json:"parentID"
}
message PermissionCreateResponse {}

message PermissionUpdateRequest {
  int64 id = 1; // @gotags: json:"id"
  string key = 2; // @gotags: json:"key"
  string name = 3; // @gotags: json:"name"
  string desc = 4; // @gotags: json:"desc"
  int64 parentID = 5; // @gotags: json:"parentID"
}
message PermissionUpdateResponse {}

message PermissionDeleteRequest {
  int64 id = 1; // @gotags: json:"id"
}
message PermissionDeleteResponse {}

message PermissionDetailRequest {
  int64 id = 1; // @gotags: json:"id"
}

message PermissionListRequest {
  string keyword = 1; // @gotags: json:"keyword"
}
message PermissionListResponse {
  repeated PermissionInfo items = 1; // @gotags: json:"items"
}
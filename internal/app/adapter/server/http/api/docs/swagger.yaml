basePath: /api
consumes:
- application/json
- application/x-www-form-urlencoded
definitions:
  example.ClientError:
    properties:
      errMsg:
        example: 客户端请求错误|参数校验错误
        type: string
      errNo:
        description: errNo 类型应为 int，string 仅为了表达多个错误码
        example: 10002|10003
        type: string
    type: object
  example.PermissionDenied:
    properties:
      errMsg:
        example: 暂无权限
        type: string
      errNo:
        example: 10005
        type: integer
    type: object
  example.ResourceNotFound:
    properties:
      errMsg:
        example: 资源不存在
        type: string
      errNo:
        example: 10006
        type: integer
    type: object
  example.ServerError:
    properties:
      errMsg:
        example: 服务器出错
        type: string
      errNo:
        example: 10001
        type: integer
    type: object
  example.Success:
    properties:
      data: {}
    type: object
  example.TooManyRequest:
    properties:
      errMsg:
        example: 请求过于频繁
        type: string
      errNo:
        example: 10007
        type: integer
    type: object
  example.Unauthorized:
    properties:
      errMsg:
        example: 未经授权
        type: string
      errNo:
        example: 10004
        type: integer
    type: object
  v1.AccountLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  v1.AccountLoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/v1.UserInfo'
    type: object
  v1.AccountProfileResponse:
    properties:
      id:
        type: integer
      nickname:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  v1.AccountRegisterRequest:
    properties:
      nickname:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  v1.AccountRegisterResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/v1.UserInfo'
    type: object
  v1.AccountUpdateProfileRequest:
    properties:
      nickname:
        type: string
    type: object
  v1.GreetHelloResponse:
    properties:
      msg:
        type: string
    type: object
  v1.PermissionCreateRequest:
    properties:
      desc:
        type: string
      key:
        type: string
      name:
        type: string
      parentID:
        type: integer
    type: object
  v1.PermissionDetailResponse:
    properties:
      desc:
        type: string
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      parentID:
        type: integer
    type: object
  v1.PermissionInfo:
    properties:
      desc:
        type: string
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      parentID:
        type: integer
    type: object
  v1.PermissionUpdateRequest:
    properties:
      desc:
        type: string
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      parentID:
        type: integer
    type: object
  v1.ProducerExampleRequest:
    properties:
      msg:
        type: string
    type: object
  v1.ProductCreateRequest:
    properties:
      desc:
        type: string
      name:
        type: string
      price:
        type: integer
    type: object
  v1.ProductDetailResponse:
    properties:
      desc:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
    type: object
  v1.ProductInfo:
    properties:
      desc:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
    type: object
  v1.ProductUpdateRequest:
    properties:
      desc:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
    type: object
  v1.RoleCreateRequest:
    properties:
      name:
        type: string
    type: object
  v1.RoleDetailResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  v1.RoleGetPermissionsRequest:
    properties:
      id:
        type: integer
    type: object
  v1.RoleGrantPermissionsRequest:
    properties:
      permissions:
        items:
          type: integer
        type: array
      role:
        type: integer
    type: object
  v1.RoleInfo:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  v1.RoleUpdateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  v1.UserAssignRoleRequest:
    properties:
      roles:
        items:
          type: integer
        type: array
      user:
        type: integer
    type: object
  v1.UserCreateRequest:
    properties:
      nickname:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  v1.UserDetailResponse:
    properties:
      id:
        type: integer
      nickname:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  v1.UserGetRoleRequest:
    properties:
      id:
        type: integer
    type: object
  v1.UserInfo:
    properties:
      id:
        type: integer
      nickname:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  v1.UserUpdateRequest:
    properties:
      id:
        type: integer
      nickname:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
host: localhost
info:
  contact: {}
  description: API 接口文档
  title: API 接口文档
  version: 0.0.0
paths:
  /v1/account/permissions:
    get:
      consumes:
      - text/plain
      description: 获取账号权限
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.PermissionInfo'
                  type: array
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 获取账号权限
      tags:
      - 账号
  /v1/account/profile:
    get:
      consumes:
      - text/plain
      description: 获取账号信息
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  $ref: '#/definitions/v1.AccountProfileResponse'
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 获取账号信息
      tags:
      - 账号
    put:
      consumes:
      - application/json
      description: 更新账号信息
      parameters:
      - description: 请求体
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.AccountUpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 更新账号信息
      tags:
      - 账号
  /v1/greet:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 示例接口
      parameters:
      - default: Tom
        description: 名称
        format: string
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  $ref: '#/definitions/v1.GreetHelloResponse'
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 示例接口
      tags:
      - 示例
  /v1/login:
    post:
      consumes:
      - application/json
      description: 登录
      parameters:
      - description: 请求体
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.AccountLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  $ref: '#/definitions/v1.AccountLoginResponse'
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 登录
      tags:
      - 账号
  /v1/logout:
    delete:
      consumes:
      - text/plain
      description: 登出
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 登出
      tags:
      - 账号
  /v1/permission:
    delete:
      consumes:
      - text/plain
      description: 权限删除
      parameters:
      - description: 权限 id
        format: uint
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 权限删除
      tags:
      - 权限
    get:
      consumes:
      - text/plain
      description: 权限详情
      parameters:
      - description: 权限 id
        format: uint
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  $ref: '#/definitions/v1.PermissionDetailResponse'
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 权限详情
      tags:
      - 权限
    post:
      consumes:
      - application/json
      description: 权限创建
      parameters:
      - description: 权限信息
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.PermissionCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 权限创建
      tags:
      - 权限
    put:
      consumes:
      - application/json
      description: 权限更新
      parameters:
      - description: 权限信息
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.PermissionUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 权限更新
      tags:
      - 权限
  /v1/permissions:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 权限列表
      parameters:
      - description: 查询字符串
        format: string
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.PermissionInfo'
                  type: array
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 权限列表
      tags:
      - 权限
  /v1/producer/example:
    post:
      consumes:
      - application/json
      description: 示例接口
      parameters:
      - description: 生产者消息
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.ProducerExampleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 示例接口
      tags:
      - 示例
  /v1/product:
    delete:
      consumes:
      - text/plain
      description: 产品删除
      parameters:
      - description: 产品 id
        format: uint
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 产品删除
      tags:
      - 产品
    get:
      consumes:
      - text/plain
      description: 产品详情
      parameters:
      - description: 产品 id
        format: uint
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  $ref: '#/definitions/v1.ProductDetailResponse'
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 产品详情
      tags:
      - 产品
    post:
      consumes:
      - application/json
      description: 产品创建
      parameters:
      - description: 产品信息
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.ProductCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 产品创建
      tags:
      - 产品
    put:
      consumes:
      - application/json
      description: 产品更新
      parameters:
      - description: 产品信息
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.ProductUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 产品更新
      tags:
      - 产品
  /v1/products:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 产品列表
      parameters:
      - description: 查询字符串
        format: string
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.ProductInfo'
                  type: array
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 产品列表
      tags:
      - 产品
  /v1/register:
    post:
      consumes:
      - application/json
      description: 注册
      parameters:
      - description: 请求体
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.AccountRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  $ref: '#/definitions/v1.AccountRegisterResponse'
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 注册
      tags:
      - 账号
  /v1/role:
    delete:
      consumes:
      - text/plain
      description: 角色删除
      parameters:
      - description: 权限 id
        format: uint
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 角色删除
      tags:
      - 角色
    get:
      consumes:
      - text/plain
      description: 角色详情
      parameters:
      - description: 权限 id
        format: uint
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  $ref: '#/definitions/v1.RoleDetailResponse'
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 角色详情
      tags:
      - 角色
    post:
      consumes:
      - application/json
      description: 角色创建
      parameters:
      - description: 权限信息
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.RoleCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 角色创建
      tags:
      - 角色
    put:
      consumes:
      - application/json
      description: 角色更新
      parameters:
      - description: 权限信息
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.RoleUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 角色更新
      tags:
      - 角色
  /v1/role/permissions:
    get:
      consumes:
      - application/json
      description: 获取角色权限
      parameters:
      - description: 请求体
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.RoleGetPermissionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 获取角色权限
      tags:
      - 角色
    post:
      consumes:
      - application/json
      description: 授权角色权限
      parameters:
      - description: 请求体
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.RoleGrantPermissionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 授权角色权限
      tags:
      - 角色
  /v1/roles:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 角色列表
      parameters:
      - description: 查询字符串
        format: string
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.RoleInfo'
                  type: array
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 列表
      tags:
      - 角色
  /v1/trace/example:
    post:
      consumes:
      - application/json
      description: 示例接口
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 示例接口
      tags:
      - 示例
  /v1/user:
    delete:
      consumes:
      - text/plain
      description: 用户删除
      parameters:
      - description: 权限 id
        format: uint
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 用户删除
      tags:
      - 用户
    get:
      consumes:
      - text/plain
      description: 用户详情
      parameters:
      - description: 权限 id
        format: uint
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  $ref: '#/definitions/v1.UserDetailResponse'
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 用户详情
      tags:
      - 用户
    post:
      consumes:
      - application/json
      description: 用户创建
      parameters:
      - description: 权限信息
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 用户创建
      tags:
      - 用户
    put:
      consumes:
      - application/json
      description: 用户更新
      parameters:
      - description: 权限信息
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 用户更新
      tags:
      - 用户
  /v1/user/roles:
    get:
      consumes:
      - application/json
      description: 获取用户角色
      parameters:
      - description: 请求体
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.UserGetRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.RoleInfo'
                  type: array
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 获取用户角色
      tags:
      - 用户
    post:
      consumes:
      - application/json
      description: 分配用户角色
      parameters:
      - description: 请求体
        format: string
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.UserAssignRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            $ref: '#/definitions/example.Success'
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 分配用户角色
      tags:
      - 用户
  /v1/users:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 用户列表
      parameters:
      - description: 查询字符串
        format: string
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            allOf:
            - $ref: '#/definitions/example.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.UserInfo'
                  type: array
              type: object
        "400":
          description: 客户端请求错误（code 类型应为 int，string 仅为了表达多个错误码）
          schema:
            $ref: '#/definitions/example.ClientError'
        "401":
          description: 登陆失效
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: 没有权限
          schema:
            $ref: '#/definitions/example.PermissionDenied'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/example.ResourceNotFound'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/example.TooManyRequest'
        "500":
          description: 服务器出错
          schema:
            $ref: '#/definitions/example.ServerError'
      security:
      - Authorization: []
      summary: 用户列表
      tags:
      - 用户
produces:
- application/json
schemes:
- http
- https
securityDefinitions:
  Authorization:
    in: header
    name: Token
    type: apiKey
swagger: "2.0"
